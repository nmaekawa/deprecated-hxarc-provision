---
    - name: compose the cert filename
      set_fact:
          cert_partial_filename: "{{ service_name }}_{{ org_dns_domain | replace('.', '_') }}"

    - name: replace server_name with webserver_dns in nginx config
      replace:
        path: /etc/nginx/sites-available/ssl_{{ service_name }}
        regexp: '^(\s+)server_name\s+.*$'
        replace: '\1server_name    {{ webserver_dns }};'
        backup: yes
      when: enable_ssl == 'true'


    - name: replace server_name with webserver_dns in nonssl nginx config
      replace:
        path: /etc/nginx/sites-available/nonssl_{{ service_name }}
        regexp: '^(\s+)server_name\s+.*$'
        replace: '\1server_name {{ webserver_dns }}'
        backup: yes

    - name: link ssl cert to correct file for prod cluster
      file:
        src: "{{ nginx_ssl_dest_dir }}/{{ cert_partial_filename }}_bundle.crt"
        dest: "{{ nginx_ssl_dest_dir }}/{{ service_name }}.crt"
        state: link
      when: enable_ssl == 'true' and ec2_tag_cluster == 'prod'
      notify: restart nginx


    - name: link ssl key to correct file for prod cluster
      file:
        src: "{{ nginx_ssl_dest_dir }}/{{ cert_partial_filename }}.key"
        dest: "{{ nginx_ssl_dest_dir }}/{{ service_name }}.key"
        state: link
      when: enable_ssl == 'true' and ec2_tag_cluster == 'prod'
      notify: restart nginx


    - name: link ssl cert to correct file
      file:
        src: "{{ nginx_ssl_dest_dir }}/all_{{ cert_partial_filename }}_bundle.crt"
        dest: "{{ nginx_ssl_dest_dir }}/{{ service_name }}.crt"
        state: link
      when: enable_ssl == 'true' and ec2_tag_cluster != 'prod'
      notify: restart nginx


    - name: link ssl key to correct file
      file:
        src: "{{ nginx_ssl_dest_dir }}/all_{{ cert_partial_filename }}.key"
        dest: "{{ nginx_ssl_dest_dir }}/{{ service_name }}.key"
        state: link
      when: enable_ssl == 'true' and ec2_tag_cluster != 'prod'
      notify: restart nginx


    - name: ensure service site is enabled
      file:
        src: /etc/nginx/sites-available/{{ (enable_ssl == 'true') | ternary('ssl', 'nonssl') }}_{{ service_name }}
        dest: /etc/nginx/sites-enabled/{{ service_name }}
        state: link
      notify: restart nginx

