# install scripts for monitoring ec2 instances
#
#
# this playbook requires awscli locally installed!
#
---

# https://gist.github.com/gwillem/4ba393dceb55e5ae276a87300f6b8e6f
# https://stackoverflow.com/questions/32429259/ansible-fails-with-bin-sh-1-usr-bin-python-not-found/41429731
- hosts: '{{ target_hosts | default("tag_service_hxarc", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  gather_facts: False
  vars_files:
      - vars/hxarc_vars.yml

  tasks:
  - name: install python2
    raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)


- hosts: '{{ target_hosts | default("tag_service_hxarc", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars_files:
      - vars/hxarc_vars.yml

  tasks:
      - include_role:
          name: external/Stouts.users
        vars:
            users_enabled: yes
            users_users:
                - name: cloudwatch
                  authorized: []
            users_to_install:
                - cloudwatch

      - include_role:
          name: external/nmaekawa.cloudwatch
        vars:
            cloudwatch_user: cloudwatch


- hosts: '{{ target_hosts | default("tag_service_hxarc", true) }}'
  remote_user: "{{ my_remote_user }}"
  become: yes
  become_user: root
  vars:
      project_name: '{{ hostvars[inventory_hostname].ec2_tag_project | mandatory}}'
      cloudwatch_namespace: '{{ cloudwatch_namespace_prefix }}/{{ project_name }}'
      service_cw_install_dir: '/opt/aws-scripts-mon/'
  vars_files:
      - vars/hxarc_vars.yml

  tasks:

      - import_role:
          name: external/weihrauch.cloudwatch-monitoring
        vars:
            cw_install_dir: '{{ service_cw_install_dir }}'
            cw_options: "--mem-util --mem-used --mem-avail"
            cw_cron_minute: "*/2"

      - name: change metric namespace
        replace:
            path: '{{ service_cw_install_dir }}/mon-put-instance-data.pl'
            regexp: "(.*input_ref->{'Namespace'} =).*"
            replace: '\1 "{{ cloudwatch_namespace }}";'
            backup: yes

