---

# assumes either aws or vagrant, then derive remote_user(assumes ubuntu)
use_aws: "{{ (ec2_tag_cluster == 'vagrant') | ternary(False, True) }}"
my_remote_user: "{{ use_aws | ternary('ubuntu', 'vagrant') }}"



# service vars
service_name: "hxarc"
service_user: "{{ service_name }}"
service_group: "{{ service_name }}"
service_rootdir: "/opt/{{ service_name }}"
service_venv_dir: "{{ service_rootdir }}/venv"
service_log_dir: "{{ service_rootdir }}/log"
service_install_dir: "{{ service_rootdir }}/{{ service_name }}"
service_config_dir: "{{ service_rootdir }}/conf"
service_git_repo: "https://github.com/nmaekawa/hxarc.git"
service_git_version: "master"

service_dirs_to_create:
    - "{{ service_rootdir }}"
    - "{{ service_log_dir }}"
    - "{{ service_config_dir }}"

service_dotenv_path: "{{ service_config_dir }}/{{ service_name }}.env"
service_log_path: "{{ service_log_dir }}/{{ service_name }}.log"


# subproc vars
subproc_name: "hxpy"
subproc_user: "{{ service_name }}"  # use same as web
subproc_group: "{{ service_name }}"  # use same as web
subproc_rootdir: "/opt/{{ subproc_name }}"
subproc_venv: "{{ subproc_rootdir }}/venv"
subproc_install_dir: "{{ subproc_rootdir }}/{{ subproc_name }}"



# for nmaekawa.apt
apt_required_packages_hxarc:
    - 'python-pip'
    - 'python-dev'
    - 'python-setuptools'
    - 'nginx'
    - 'supervisor'


# for Stouts.users
users_enabled: yes

users_users:
    - name: '{{ service_user }}'
      authorized: []

    - name: '{{ subproc_user }}'
      authorized: []



users_ssh_keys: '{{ users_users }}'

users_to_install:
    - '{{ service_user }}'
    - '{{ subproc_user }}'

